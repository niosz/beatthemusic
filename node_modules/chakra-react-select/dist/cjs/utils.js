"use strict";

exports.__esModule = true;
exports.cleanCommonProps = void 0;
var _excluded = ["className", "clearValue", "cx", "getStyles", "getValue", "hasValue", "isMulti", "isRtl", "options", "selectOption", "selectProps", "setValue", "theme"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Borrowed from the original `react-select` package
 *
 * @see {@link https://github.com/JedWatson/react-select/blob/2d3d6afe18421ea5b6c3f8f0db479ad323c35639/packages/react-select/src/utils.ts#L74}
 */
var cleanCommonProps = function cleanCommonProps(props) {
  // className
  var className = props.className,
      clearValue = props.clearValue,
      cx = props.cx,
      getStyles = props.getStyles,
      getValue = props.getValue,
      hasValue = props.hasValue,
      isMulti = props.isMulti,
      isRtl = props.isRtl,
      options = props.options,
      selectOption = props.selectOption,
      selectProps = props.selectProps,
      setValue = props.setValue,
      theme = props.theme,
      innerProps = _objectWithoutPropertiesLoose(props, _excluded);

  return _extends({}, innerProps);
};

exports.cleanCommonProps = cleanCommonProps;
//# sourceMappingURL=utils.js.map