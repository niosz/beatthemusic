"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/socket";
exports.ids = ["pages/api/socket"];
exports.modules = {

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ "Socket.IO":
/*!****************************!*\
  !*** external "Socket.IO" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("Socket.IO");;

/***/ }),

/***/ "(api)/./pages/api/socket.ts":
/*!*****************************!*\
  !*** ./pages/api/socket.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var Socket_IO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Socket.IO */ \"Socket.IO\");\n/* harmony import */ var _server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server_src/socket/events */ \"(api)/./server_src/socket/events.ts\");\n/* harmony import */ var _src_utils_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/utils/const */ \"(api)/./src/utils/const.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([Socket_IO__WEBPACK_IMPORTED_MODULE_0__]);\nSocket_IO__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nlet gameData = {\n    started: false,\n    quizStarted: false,\n    quizNumber: -1,\n    totalQuestions: -1,\n    startedTime: 0,\n    pin: \"\",\n    resultStep: -1\n};\nlet players = {};\nlet counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_2__.NOT_COUNTING;\nlet quizData = {\n    q: \"\",\n    video: \"\",\n    answers: []\n};\nlet quizAnswers = {};\nlet quizResult = {\n    answers: [],\n    correctAnswer: -1,\n    title: \"\"\n};\nconst dataUpdater = (socketData)=>{\n    gameData = socketData.gameData;\n    counter = socketData.counter;\n    players = socketData.players;\n    quizData = socketData.quizData;\n    quizAnswers = socketData.quizAnswers;\n    quizResult = socketData.quizResult;\n};\nconst SocketHandler = (req, res)=>{\n    if (!res.socket.server.io) {\n        const io = new Socket_IO__WEBPACK_IMPORTED_MODULE_0__.Server(res.socket.server);\n        res.socket.server.io = io;\n        io.on(\"connection\", (socket)=>{\n            (0,_server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.connectPlayer)({\n                gameData,\n                counter,\n                players,\n                quizData,\n                quizAnswers,\n                quizResult\n            }, io, socket, dataUpdater);\n            Object.keys(_server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.events).forEach((event)=>{\n                const eventType = event;\n                socket.on(event, (msg)=>{\n                    const eventFn = _server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.events[eventType];\n                    eventFn(io, socket, {\n                        gameData,\n                        counter,\n                        players,\n                        quizData,\n                        quizAnswers,\n                        quizResult\n                    }, msg, dataUpdater);\n                });\n            });\n        });\n    }\n    res.end();\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SocketHandler);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0IHsgU2VydmVyIH0gZnJvbSBcIlNvY2tldC5JT1wiO1xuaW1wb3J0IHtcbiAgR2FtZURhdGEsXG4gIFBsYXllcnMsXG4gIFF1aXpBbnN3ZXIsXG4gIFF1aXpSZXN1bHQsXG4gIFNvY2tldERhdGEsXG59IGZyb20gXCIuLi8uLi9zZXJ2ZXJfc3JjL2ludGVyZmFjZXNcIjtcbmltcG9ydCB7XG4gIGNvbm5lY3RQbGF5ZXIsXG4gIGV2ZW50cyxcbiAgU29ja2V0RXZlbnQsXG59IGZyb20gXCIuLi8uLi9zZXJ2ZXJfc3JjL3NvY2tldC9ldmVudHNcIjtcbmltcG9ydCB7IFF1aXpEYXRhIH0gZnJvbSBcIi4uLy4uL3NyYy9zdG9yZS9HYW1lU3RvcmVcIjtcbmltcG9ydCB7IE5PVF9DT1VOVElORyB9IGZyb20gXCIuLi8uLi9zcmMvdXRpbHMvY29uc3RcIjtcblxubGV0IGdhbWVEYXRhOiBHYW1lRGF0YSA9IHtcbiAgc3RhcnRlZDogZmFsc2UsXG4gIHF1aXpTdGFydGVkOiBmYWxzZSxcbiAgcXVpek51bWJlcjogLTEsXG4gIHRvdGFsUXVlc3Rpb25zOiAtMSxcbiAgc3RhcnRlZFRpbWU6IDAsXG4gIHBpbjogXCJcIixcbiAgcmVzdWx0U3RlcDogLTEsXG59O1xubGV0IHBsYXllcnM6IFBsYXllcnMgPSB7fTtcbmxldCBjb3VudGVyID0gTk9UX0NPVU5USU5HO1xubGV0IHF1aXpEYXRhOiBRdWl6RGF0YSA9IHsgcTogXCJcIiwgdmlkZW86IFwiXCIsIGFuc3dlcnM6IFtdIH07XG5sZXQgcXVpekFuc3dlcnM6IFF1aXpBbnN3ZXIgPSB7fTtcbmxldCBxdWl6UmVzdWx0OiBRdWl6UmVzdWx0ID0geyBhbnN3ZXJzOiBbXSwgY29ycmVjdEFuc3dlcjogLTEsIHRpdGxlOiBcIlwiIH07XG5cbmNvbnN0IGRhdGFVcGRhdGVyID0gKHNvY2tldERhdGE6IFNvY2tldERhdGEpID0+IHtcbiAgZ2FtZURhdGEgPSBzb2NrZXREYXRhLmdhbWVEYXRhO1xuICBjb3VudGVyID0gc29ja2V0RGF0YS5jb3VudGVyO1xuICBwbGF5ZXJzID0gc29ja2V0RGF0YS5wbGF5ZXJzO1xuICBxdWl6RGF0YSA9IHNvY2tldERhdGEucXVpekRhdGE7XG4gIHF1aXpBbnN3ZXJzID0gc29ja2V0RGF0YS5xdWl6QW5zd2VycztcbiAgcXVpelJlc3VsdCA9IHNvY2tldERhdGEucXVpelJlc3VsdDtcbn07XG5cbmNvbnN0IFNvY2tldEhhbmRsZXIgPSAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XG4gIGlmICghcmVzLnNvY2tldC5zZXJ2ZXIuaW8pIHtcbiAgICBjb25zdCBpbyA9IG5ldyBTZXJ2ZXIocmVzLnNvY2tldC5zZXJ2ZXIpO1xuICAgIHJlcy5zb2NrZXQuc2VydmVyLmlvID0gaW87XG5cbiAgICBpby5vbihcImNvbm5lY3Rpb25cIiwgKHNvY2tldCkgPT4ge1xuICAgICAgY29ubmVjdFBsYXllcihcbiAgICAgICAgeyBnYW1lRGF0YSwgY291bnRlciwgcGxheWVycywgcXVpekRhdGEsIHF1aXpBbnN3ZXJzLCBxdWl6UmVzdWx0IH0sXG4gICAgICAgIGlvLFxuICAgICAgICBzb2NrZXQsXG4gICAgICAgIGRhdGFVcGRhdGVyXG4gICAgICApO1xuXG4gICAgICBPYmplY3Qua2V5cyhldmVudHMpLmZvckVhY2goKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGV2ZW50VHlwZSA9IGV2ZW50IGFzIFNvY2tldEV2ZW50O1xuICAgICAgICBzb2NrZXQub24oZXZlbnQsIChtc2cpID0+IHtcbiAgICAgICAgICBjb25zdCBldmVudEZuID0gZXZlbnRzW2V2ZW50VHlwZV07XG4gICAgICAgICAgZXZlbnRGbihcbiAgICAgICAgICAgIGlvLFxuICAgICAgICAgICAgc29ja2V0LFxuICAgICAgICAgICAgeyBnYW1lRGF0YSwgY291bnRlciwgcGxheWVycywgcXVpekRhdGEsIHF1aXpBbnN3ZXJzLCBxdWl6UmVzdWx0IH0sXG4gICAgICAgICAgICBtc2csXG4gICAgICAgICAgICBkYXRhVXBkYXRlclxuICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgcmVzLmVuZCgpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU29ja2V0SGFuZGxlcjtcbiJdLCJuYW1lcyI6WyJTZXJ2ZXIiLCJjb25uZWN0UGxheWVyIiwiZXZlbnRzIiwiTk9UX0NPVU5USU5HIiwiZ2FtZURhdGEiLCJzdGFydGVkIiwicXVpelN0YXJ0ZWQiLCJxdWl6TnVtYmVyIiwidG90YWxRdWVzdGlvbnMiLCJzdGFydGVkVGltZSIsInBpbiIsInJlc3VsdFN0ZXAiLCJwbGF5ZXJzIiwiY291bnRlciIsInF1aXpEYXRhIiwicSIsInZpZGVvIiwiYW5zd2VycyIsInF1aXpBbnN3ZXJzIiwicXVpelJlc3VsdCIsImNvcnJlY3RBbnN3ZXIiLCJ0aXRsZSIsImRhdGFVcGRhdGVyIiwic29ja2V0RGF0YSIsIlNvY2tldEhhbmRsZXIiLCJyZXEiLCJyZXMiLCJzb2NrZXQiLCJzZXJ2ZXIiLCJpbyIsIm9uIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJldmVudCIsImV2ZW50VHlwZSIsIm1zZyIsImV2ZW50Rm4iLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/socket.ts\n");

/***/ }),

/***/ "(api)/./server_src/socket/events.ts":
/*!*************************************!*\
  !*** ./server_src/socket/events.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectPlayer\": () => (/* binding */ connectPlayer),\n/* harmony export */   \"emitData\": () => (/* binding */ emitData),\n/* harmony export */   \"events\": () => (/* binding */ events),\n/* harmony export */   \"getOnlinePlayers\": () => (/* binding */ getOnlinePlayers)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_utils_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/utils/const */ \"(api)/./src/utils/const.ts\");\n\n\nconst getOnlinePlayers = (players)=>{\n    return lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(players, (user)=>user.isOnline && user.isInRoom\n    );\n};\nconst getAnswerScore = (gameState, answerIndex)=>{\n    const qNumber = gameState.gameData.quizNumber;\n    const correctAnswer = quiz.questions[qNumber].answer;\n    const isCorrect = answerIndex === correctAnswer;\n    let score = 0;\n    if (isCorrect) {\n        score = 1;\n        const addrKeys = Object.keys(gameState.quizAnswers[qNumber]);\n        if (addrKeys && addrKeys.length > 0) {\n            addrKeys.forEach((addr)=>{\n                const answerItem = gameState.quizAnswers[qNumber][addr];\n                if (answerItem.answerIndex !== correctAnswer) {\n                    score = 2;\n                }\n            });\n        } else {\n            score = 2;\n        }\n    }\n    return score;\n};\nconst connectPlayer = (gameState, io, socket, updateData)=>{\n    const addr = socket.handshake.address;\n    const id = socket.id;\n    if (!gameState.players[addr]) {\n        gameState.players[addr] = {\n            name: \"\",\n            score: 0,\n            isOnline: true,\n            isInRoom: false,\n            id\n        };\n    } else {\n        gameState.players[addr].isOnline = true;\n        gameState.players[addr].id = id;\n    }\n    updateData(gameState);\n    emitData(gameState, io);\n};\nconst quiz = __webpack_require__(/*! ./../q001.json */ \"(api)/./server_src/q001.json\");\nconst emitData = (gameState, io)=>{\n    io.emit(\"online-players\", getOnlinePlayers(gameState.players));\n    io.emit(\"game-data\", gameState.gameData);\n    io.emit(\"quiz-counter\", gameState.counter);\n    io.emit(\"quiz-data\", gameState.quizData);\n    io.emit(\"quiz-result\", gameState.quizResult);\n    io.fetchSockets().then((sockets)=>{\n        sockets.forEach((socketItem)=>{\n            const addr = socketItem.handshake.address;\n            const qNumber = gameState.gameData.quizNumber;\n            let clientQuizAnswer = {\n                answerIndex: -1,\n                answerTime: new Date(),\n                answerScore: 0,\n                answerElapsed: 0\n            };\n            if (qNumber > -1 && gameState.quizAnswers[gameState.gameData.quizNumber][addr]) {\n                clientQuizAnswer = gameState.quizAnswers[gameState.gameData.quizNumber][addr];\n            }\n            socketItem.emit(\"answer-data\", {\n                answerIndex: clientQuizAnswer.answerIndex,\n                answerTime: clientQuizAnswer.answerTime.getTime(),\n                answerScore: clientQuizAnswer.answerScore,\n                answerElapsed: clientQuizAnswer.answerElapsed\n            });\n        });\n    });\n};\nconst getCurrentRanking = (data, players)=>{\n    let ranking = {};\n    Object.keys(data).forEach((quizQ)=>{\n        const quizQN = parseInt(quizQ, 10);\n        Object.keys(data[quizQN]).forEach((item)=>{\n            if (ranking[item]) {\n                ranking[item].score = ranking[item].score + data[quizQN][item].answerScore;\n                ranking[item].roundTime = data[quizQN][item].answerElapsed;\n                ranking[item].answeredQuestions = ranking[item].answeredQuestions + 1;\n                ranking[item].timeAvg = ranking[item].timeAvg + data[quizQN][item].answerElapsed;\n            } else {\n                ranking[item] = {\n                    name: players[item].name,\n                    score: data[quizQN][item].answerScore,\n                    roundTime: data[quizQN][item].answerElapsed,\n                    timeAvg: data[quizQN][item].answerElapsed,\n                    answeredQuestions: 1\n                };\n            }\n        });\n    });\n    const rankingArray = Object.keys(ranking).map((rankingItem)=>{\n        ranking[rankingItem].timeAvg = ranking[rankingItem].timeAvg / ranking[rankingItem].answeredQuestions;\n        return ranking[rankingItem];\n    });\n    return lodash__WEBPACK_IMPORTED_MODULE_0___default().sortBy(rankingArray, (el)=>el.score\n    ).reverse();\n};\nconst events = {\n    \"init-live\": (io, socket, gameState, msg)=>{\n        socket.data = {\n            liveInstance: true\n        };\n        socket.emit(\"game-data\", gameState.gameData);\n    },\n    \"end-game\": (io, socket, gameState, msg, updateData)=>{\n        gameState.gameData.started = false;\n        gameState.gameData.quizStarted = false;\n        gameState.gameData.quizNumber = -1;\n        gameState.gameData.startedTime = new Date().getTime();\n        gameState.gameData.pin = \"\";\n        Object.keys(gameState.players).forEach((pKey)=>{\n            const currPlayer = gameState.players[pKey];\n            gameState.players[pKey] = {\n                ...currPlayer,\n                name: \"\",\n                score: 0,\n                isInRoom: false\n            };\n        });\n        gameState.players = lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(gameState.players, (p)=>{\n            return p.isOnline;\n        });\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.NOT_COUNTING;\n        gameState.quizAnswers = {};\n        updateData(gameState);\n        emitData(gameState, io);\n    },\n    \"start-game\": (io, socket, gameState, msg, updateData)=>{\n        gameState.gameData.started = true;\n        gameState.gameData.quizStarted = false;\n        gameState.gameData.startedTime = new Date().getTime();\n        gameState.gameData.pin = lodash__WEBPACK_IMPORTED_MODULE_0___default().range(0, 6).map(()=>lodash__WEBPACK_IMPORTED_MODULE_0___default().random(0, 9)\n        ).join(\"\");\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.NOT_COUNTING;\n        updateData(gameState);\n        emitData(gameState, io);\n    },\n    \"start-quiz\": (io, socket, gameState, msg, updateData)=>{\n        gameState.gameData.resultStep = -1;\n        gameState.counter = 3;\n        gameState.gameData.quizNumber = gameState.gameData.quizNumber + 1;\n        gameState.gameData.quizStarted = true;\n        gameState.quizAnswers[gameState.gameData.quizNumber] = {};\n        gameState.gameData.totalQuestions = quiz.questions.length;\n        emitData(gameState, io);\n        io.emit(\"quiz-counter\", _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.GAME_STARTING);\n        const counterInterval = setInterval(()=>{\n            io.emit(\"quiz-counter\", gameState.counter);\n            if (gameState.counter === 0) {\n                const quizItem = quiz.questions[gameState.gameData.quizNumber];\n                gameState.quizData = {\n                    q: quizItem.question,\n                    video: quizItem.video,\n                    answers: quizItem.keyboard === \"TRUEFALSE\" ? [\n                        \"V\",\n                        \"F\"\n                    ] : quizItem.options\n                };\n                io.emit(\"quiz-data\", gameState.quizData);\n                clearInterval(counterInterval);\n                gameState.gameData.startedTime = new Date().getTime();\n                updateData(gameState);\n            } else {\n                gameState.counter--;\n                updateData(gameState);\n            }\n        }, 1000);\n    },\n    \"join-game\": (io, socket, gameState, msg, updateData)=>{\n        const addr = socket.handshake.address;\n        if (msg.pin === gameState.gameData.pin && gameState.gameData.started) {\n            gameState.players[addr].id = socket.id;\n            gameState.players[addr].isOnline = true;\n            gameState.players[addr].name = msg.name;\n            gameState.players[addr].isInRoom = true;\n            updateData(gameState);\n            emitData(gameState, io);\n        }\n    },\n    disconnect: (io, socket, gameState, msg, updateData)=>{\n        const addr = socket.handshake.address;\n        gameState.players[addr].isOnline = false;\n        updateData(gameState);\n        emitData(gameState, io);\n    },\n    \"answer-question\": (io, socket, gameState, answerIndex, updateData)=>{\n        const addr = socket.handshake.address;\n        const answerScore = getAnswerScore(gameState, answerIndex);\n        const answerResult = {\n            answerIndex,\n            answerTime: new Date(),\n            answerScore,\n            answerElapsed: new Date().getTime() - gameState.gameData.startedTime\n        };\n        if (!gameState.quizAnswers[gameState.gameData.quizNumber]) {\n            gameState.quizAnswers[gameState.gameData.quizNumber] = {};\n        }\n        gameState.quizAnswers[gameState.gameData.quizNumber][addr] = answerResult;\n        updateData(gameState);\n        emitData(gameState, io);\n    },\n    \"end-quiz\": (io, socket1, gameState, msg, updateData)=>{\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.SHOW_RESULTS;\n        gameState.gameData.resultStep = 0;\n        const quizNumber = gameState.gameData.quizNumber;\n        const quizQuestion = quiz.questions[quizNumber];\n        let options;\n        switch(quizQuestion.keyboard){\n            case \"ABCD\":\n                var ref;\n                options = (ref = quizQuestion.options) === null || ref === void 0 ? void 0 : ref.map((q, i)=>i\n                );\n                break;\n            case \"TRUEFALSE\":\n                options = [\n                    true,\n                    false\n                ];\n        }\n        const resultsByAnswer = options.map((q, i)=>{\n            return {\n                answerCode: lodash__WEBPACK_IMPORTED_MODULE_0___default().isBoolean(q) ? [\n                    \"V\",\n                    \"F\"\n                ][i] : String.fromCharCode(65 + i),\n                people: Object.keys(lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(gameState.quizAnswers[quizNumber], (addr)=>{\n                    return addr.answerIndex === q;\n                })).length\n            };\n        });\n        gameState.quizResult = {\n            title: quiz.title,\n            correctAnswer: quizQuestion.answer,\n            answers: resultsByAnswer\n        };\n        const ranking = getCurrentRanking(gameState.quizAnswers, gameState.players);\n        io.fetchSockets().then((sockets)=>{\n            const liveSockets = sockets.filter((socket)=>{\n                return socket.data.liveInstance;\n            });\n            console.log(liveSockets.length);\n            liveSockets.forEach((socket)=>{\n                socket.emit(\"data-ranking\", ranking);\n                console.log(\"emit\");\n            });\n        });\n        updateData(gameState);\n        emitData(gameState, io);\n    },\n    \"next-resultstep\": (io, socket, gameState, msg, updateData)=>{\n        if (gameState.gameData.resultStep < 2) {\n            gameState.gameData.resultStep = gameState.gameData.resultStep + 1;\n            updateData(gameState);\n            emitData(gameState, io);\n        } else {\n            events[\"start-quiz\"](io, socket, gameState, msg, updateData);\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./server_src/socket/events.ts\n");

/***/ }),

/***/ "(api)/./src/utils/const.ts":
/*!****************************!*\
  !*** ./src/utils/const.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GAME_STARTING\": () => (/* binding */ GAME_STARTING),\n/* harmony export */   \"NOT_COUNTING\": () => (/* binding */ NOT_COUNTING),\n/* harmony export */   \"SHOW_RESULTS\": () => (/* binding */ SHOW_RESULTS),\n/* harmony export */   \"buttonColors\": () => (/* binding */ buttonColors)\n/* harmony export */ });\nconst SHOW_RESULTS = -3;\nconst GAME_STARTING = -2;\nconst NOT_COUNTING = -1;\nconst buttonColors = [\n    \"#00501F\",\n    \"#6D172D\",\n    \"#103569\",\n    \"#26262D\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvY29uc3QudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPLE1BQU1BLFlBQVksR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN4QixNQUFNQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDekIsTUFBTUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3hCLE1BQU1DLFlBQVksR0FBRztJQUFDLFNBQVM7SUFBRSxTQUFTO0lBQUUsU0FBUztJQUFFLFNBQVM7Q0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmVhdC10aGUtbXVzaWMvLi9zcmMvdXRpbHMvY29uc3QudHM/N2MwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU0hPV19SRVNVTFRTID0gLTM7XG5leHBvcnQgY29uc3QgR0FNRV9TVEFSVElORyA9IC0yO1xuZXhwb3J0IGNvbnN0IE5PVF9DT1VOVElORyA9IC0xO1xuZXhwb3J0IGNvbnN0IGJ1dHRvbkNvbG9ycyA9IFtcIiMwMDUwMUZcIiwgXCIjNkQxNzJEXCIsIFwiIzEwMzU2OVwiLCBcIiMyNjI2MkRcIl07XG4iXSwibmFtZXMiOlsiU0hPV19SRVNVTFRTIiwiR0FNRV9TVEFSVElORyIsIk5PVF9DT1VOVElORyIsImJ1dHRvbkNvbG9ycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/const.ts\n");

/***/ }),

/***/ "(api)/./server_src/q001.json":
/*!******************************!*\
  !*** ./server_src/q001.json ***!
  \******************************/
/***/ ((module) => {

module.exports = JSON.parse('{"active":true,"title":"The first quiz","questions":[{"active":true,"question":"What is the name of the artist?","keyboard":"ABCD","answer":0,"options":["Maluma","Ozuna","Daddy Yankee","Nicky Jam"],"video":"question_000.mp4"},{"active":true,"question":"What is the missing word?","keyboard":"ABCD","answer":2,"options":["quiero","suave","suavecito","pasito"],"video":"question_001.mp4"},{"active":true,"question":"What is the title of song?","keyboard":"ABCD","answer":1,"options":["Un Beso","Carrettera","Corason","Mi Culpa"],"video":"question_002.mp4"},{"active":true,"question":"The author of song is Pharrell Williams?","keyboard":"TRUEFALSE","answer":false,"video":"question_003.mp4"},{"active":true,"question":"Find the title of song!","keyboard":"ABCD","answer":3,"options":["Around around","Around the word","The world","Around the world"],"video":"question_004.mp4"}]}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/socket.ts"));
module.exports = __webpack_exports__;

})();