"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/socket";
exports.ids = ["pages/api/socket"];
exports.modules = {

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ "Socket.IO":
/*!****************************!*\
  !*** external "Socket.IO" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("Socket.IO");;

/***/ }),

/***/ "(api)/./pages/api/socket.ts":
/*!*****************************!*\
  !*** ./pages/api/socket.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var Socket_IO__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Socket.IO */ \"Socket.IO\");\n/* harmony import */ var _server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server_src/socket/events */ \"(api)/./server_src/socket/events.ts\");\n/* harmony import */ var _src_utils_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/utils/const */ \"(api)/./src/utils/const.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([Socket_IO__WEBPACK_IMPORTED_MODULE_0__]);\nSocket_IO__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nlet gameData = {\n    started: false,\n    quizStarted: false,\n    quizNumber: -1,\n    startedTime: 0,\n    pin: \"\"\n};\nlet players = {};\nlet counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_2__.NOT_COUNTING;\nlet quizData = {\n    q: \"\",\n    answers: []\n};\nlet quizAnswers = {};\nlet quizResult = {\n    answers: [],\n    correctAnswer: -1,\n    title: \"\"\n};\nconst dataUpdater = (socketData)=>{\n    gameData = socketData.gameData;\n    counter = socketData.counter;\n    players = socketData.players;\n    quizData = socketData.quizData;\n    quizAnswers = socketData.quizAnswers;\n    quizResult = socketData.quizResult;\n};\nconst SocketHandler = (req, res)=>{\n    if (!res.socket.server.io) {\n        const io = new Socket_IO__WEBPACK_IMPORTED_MODULE_0__.Server(res.socket.server);\n        res.socket.server.io = io;\n        io.on(\"connection\", (socket)=>{\n            (0,_server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.connectPlayer)({\n                gameData,\n                counter,\n                players,\n                quizData,\n                quizAnswers,\n                quizResult\n            }, io, socket, dataUpdater);\n            Object.keys(_server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.events).forEach((event)=>{\n                const eventType = event;\n                socket.on(event, (msg)=>{\n                    const eventFn = _server_src_socket_events__WEBPACK_IMPORTED_MODULE_1__.events[eventType];\n                    eventFn(io, socket, {\n                        gameData,\n                        counter,\n                        players,\n                        quizData,\n                        quizAnswers,\n                        quizResult\n                    }, msg, dataUpdater);\n                });\n            });\n        });\n    }\n    res.end();\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SocketHandler);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc29ja2V0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDbUM7QUFhSztBQUNhO0FBRXJELElBQUlJLFFBQVEsR0FBYTtJQUN2QkMsT0FBTyxFQUFFLEtBQUs7SUFDZEMsV0FBVyxFQUFFLEtBQUs7SUFDbEJDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDZEMsV0FBVyxFQUFFLENBQUM7SUFDZEMsR0FBRyxFQUFFLEVBQUU7Q0FDUjtBQUNELElBQUlDLE9BQU8sR0FBWSxFQUFFO0FBQ3pCLElBQUlDLE9BQU8sR0FBR1IsMERBQVk7QUFDMUIsSUFBSVMsUUFBUSxHQUFpQjtJQUFFQyxDQUFDLEVBQUUsRUFBRTtJQUFFQyxPQUFPLEVBQUUsRUFBRTtDQUFFO0FBQ25ELElBQUlDLFdBQVcsR0FBZSxFQUFFO0FBQ2hDLElBQUlDLFVBQVUsR0FBZTtJQUFFRixPQUFPLEVBQUUsRUFBRTtJQUFFRyxhQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQUVDLEtBQUssRUFBRSxFQUFFO0NBQUU7QUFFMUUsTUFBTUMsV0FBVyxHQUFHLENBQUNDLFVBQXNCLEdBQUs7SUFDOUNoQixRQUFRLEdBQUdnQixVQUFVLENBQUNoQixRQUFRLENBQUM7SUFDL0JPLE9BQU8sR0FBR1MsVUFBVSxDQUFDVCxPQUFPLENBQUM7SUFDN0JELE9BQU8sR0FBR1UsVUFBVSxDQUFDVixPQUFPLENBQUM7SUFDN0JFLFFBQVEsR0FBR1EsVUFBVSxDQUFDUixRQUFRLENBQUM7SUFDL0JHLFdBQVcsR0FBR0ssVUFBVSxDQUFDTCxXQUFXLENBQUM7SUFDckNDLFVBQVUsR0FBR0ksVUFBVSxDQUFDSixVQUFVLENBQUM7Q0FDcEM7QUFFRCxNQUFNSyxhQUFhLEdBQUcsQ0FBQ0MsR0FBUSxFQUFFQyxHQUFRLEdBQUs7SUFDNUMsSUFBSSxDQUFDQSxHQUFHLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxFQUFFLEVBQUU7UUFDekIsTUFBTUEsRUFBRSxHQUFHLElBQUkxQiw2Q0FBTSxDQUFDdUIsR0FBRyxDQUFDQyxNQUFNLENBQUNDLE1BQU0sQ0FBQztRQUN4Q0YsR0FBRyxDQUFDQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsRUFBRSxHQUFHQSxFQUFFLENBQUM7UUFFMUJBLEVBQUUsQ0FBQ0MsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDSCxNQUFNLEdBQUs7WUFDOUJ2Qix3RUFBYSxDQUNYO2dCQUFFRyxRQUFRO2dCQUFFTyxPQUFPO2dCQUFFRCxPQUFPO2dCQUFFRSxRQUFRO2dCQUFFRyxXQUFXO2dCQUFFQyxVQUFVO2FBQUUsRUFDakVVLEVBQUUsRUFDRkYsTUFBTSxFQUNOTCxXQUFXLENBQ1osQ0FBQztZQUVGUyxNQUFNLENBQUNDLElBQUksQ0FBQzNCLDZEQUFNLENBQUMsQ0FBQzRCLE9BQU8sQ0FBQyxDQUFDQyxLQUFLLEdBQUs7Z0JBQ3JDLE1BQU1DLFNBQVMsR0FBR0QsS0FBSztnQkFDdkJQLE1BQU0sQ0FBQ0csRUFBRSxDQUFDSSxLQUFLLEVBQUUsQ0FBQ0UsR0FBRyxHQUFLO29CQUN4QixNQUFNQyxPQUFPLEdBQUdoQyw2REFBTSxDQUFDOEIsU0FBUyxDQUFDO29CQUNqQ0UsT0FBTyxDQUNMUixFQUFFLEVBQ0ZGLE1BQU0sRUFDTjt3QkFBRXBCLFFBQVE7d0JBQUVPLE9BQU87d0JBQUVELE9BQU87d0JBQUVFLFFBQVE7d0JBQUVHLFdBQVc7d0JBQUVDLFVBQVU7cUJBQUUsRUFDakVpQixHQUFHLEVBQ0hkLFdBQVcsQ0FDWixDQUFDO2lCQUNILENBQUMsQ0FBQzthQUNKLENBQUMsQ0FBQztTQUNKLENBQUMsQ0FBQztLQUNKO0lBQ0RJLEdBQUcsQ0FBQ1ksR0FBRyxFQUFFLENBQUM7Q0FDWDtBQUVELGlFQUFlZCxhQUFhLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZWF0LXRoZS1tdXNpYy8uL3BhZ2VzL2FwaS9zb2NrZXQudHM/YWRhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tIFwibG9kYXNoXCI7XG5pbXBvcnQgeyBTZXJ2ZXIgfSBmcm9tIFwiU29ja2V0LklPXCI7XG5pbXBvcnQge1xuICBHYW1lRGF0YSxcbiAgUGxheWVycyxcbiAgUXVpekFuc3dlcixcbiAgUXVpekRhdGFTZW5kLFxuICBRdWl6UmVzdWx0LFxuICBTb2NrZXREYXRhLFxufSBmcm9tIFwiLi4vLi4vc2VydmVyX3NyYy9pbnRlcmZhY2VzXCI7XG5pbXBvcnQge1xuICBjb25uZWN0UGxheWVyLFxuICBldmVudHMsXG4gIFNvY2tldEV2ZW50LFxufSBmcm9tIFwiLi4vLi4vc2VydmVyX3NyYy9zb2NrZXQvZXZlbnRzXCI7XG5pbXBvcnQgeyBOT1RfQ09VTlRJTkcgfSBmcm9tIFwiLi4vLi4vc3JjL3V0aWxzL2NvbnN0XCI7XG5cbmxldCBnYW1lRGF0YTogR2FtZURhdGEgPSB7XG4gIHN0YXJ0ZWQ6IGZhbHNlLFxuICBxdWl6U3RhcnRlZDogZmFsc2UsXG4gIHF1aXpOdW1iZXI6IC0xLFxuICBzdGFydGVkVGltZTogMCxcbiAgcGluOiBcIlwiLFxufTtcbmxldCBwbGF5ZXJzOiBQbGF5ZXJzID0ge307XG5sZXQgY291bnRlciA9IE5PVF9DT1VOVElORztcbmxldCBxdWl6RGF0YTogUXVpekRhdGFTZW5kID0geyBxOiBcIlwiLCBhbnN3ZXJzOiBbXSB9O1xubGV0IHF1aXpBbnN3ZXJzOiBRdWl6QW5zd2VyID0ge307XG5sZXQgcXVpelJlc3VsdDogUXVpelJlc3VsdCA9IHsgYW5zd2VyczogW10sIGNvcnJlY3RBbnN3ZXI6IC0xLCB0aXRsZTogXCJcIiB9O1xuXG5jb25zdCBkYXRhVXBkYXRlciA9IChzb2NrZXREYXRhOiBTb2NrZXREYXRhKSA9PiB7XG4gIGdhbWVEYXRhID0gc29ja2V0RGF0YS5nYW1lRGF0YTtcbiAgY291bnRlciA9IHNvY2tldERhdGEuY291bnRlcjtcbiAgcGxheWVycyA9IHNvY2tldERhdGEucGxheWVycztcbiAgcXVpekRhdGEgPSBzb2NrZXREYXRhLnF1aXpEYXRhO1xuICBxdWl6QW5zd2VycyA9IHNvY2tldERhdGEucXVpekFuc3dlcnM7XG4gIHF1aXpSZXN1bHQgPSBzb2NrZXREYXRhLnF1aXpSZXN1bHQ7XG59O1xuXG5jb25zdCBTb2NrZXRIYW5kbGVyID0gKHJlcTogYW55LCByZXM6IGFueSkgPT4ge1xuICBpZiAoIXJlcy5zb2NrZXQuc2VydmVyLmlvKSB7XG4gICAgY29uc3QgaW8gPSBuZXcgU2VydmVyKHJlcy5zb2NrZXQuc2VydmVyKTtcbiAgICByZXMuc29ja2V0LnNlcnZlci5pbyA9IGlvO1xuXG4gICAgaW8ub24oXCJjb25uZWN0aW9uXCIsIChzb2NrZXQpID0+IHtcbiAgICAgIGNvbm5lY3RQbGF5ZXIoXG4gICAgICAgIHsgZ2FtZURhdGEsIGNvdW50ZXIsIHBsYXllcnMsIHF1aXpEYXRhLCBxdWl6QW5zd2VycywgcXVpelJlc3VsdCB9LFxuICAgICAgICBpbyxcbiAgICAgICAgc29ja2V0LFxuICAgICAgICBkYXRhVXBkYXRlclxuICAgICAgKTtcblxuICAgICAgT2JqZWN0LmtleXMoZXZlbnRzKS5mb3JFYWNoKChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCBldmVudFR5cGUgPSBldmVudCBhcyBTb2NrZXRFdmVudDtcbiAgICAgICAgc29ja2V0Lm9uKGV2ZW50LCAobXNnKSA9PiB7XG4gICAgICAgICAgY29uc3QgZXZlbnRGbiA9IGV2ZW50c1tldmVudFR5cGVdO1xuICAgICAgICAgIGV2ZW50Rm4oXG4gICAgICAgICAgICBpbyxcbiAgICAgICAgICAgIHNvY2tldCxcbiAgICAgICAgICAgIHsgZ2FtZURhdGEsIGNvdW50ZXIsIHBsYXllcnMsIHF1aXpEYXRhLCBxdWl6QW5zd2VycywgcXVpelJlc3VsdCB9LFxuICAgICAgICAgICAgbXNnLFxuICAgICAgICAgICAgZGF0YVVwZGF0ZXJcbiAgICAgICAgICApO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIHJlcy5lbmQoKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNvY2tldEhhbmRsZXI7XG4iXSwibmFtZXMiOlsiU2VydmVyIiwiY29ubmVjdFBsYXllciIsImV2ZW50cyIsIk5PVF9DT1VOVElORyIsImdhbWVEYXRhIiwic3RhcnRlZCIsInF1aXpTdGFydGVkIiwicXVpek51bWJlciIsInN0YXJ0ZWRUaW1lIiwicGluIiwicGxheWVycyIsImNvdW50ZXIiLCJxdWl6RGF0YSIsInEiLCJhbnN3ZXJzIiwicXVpekFuc3dlcnMiLCJxdWl6UmVzdWx0IiwiY29ycmVjdEFuc3dlciIsInRpdGxlIiwiZGF0YVVwZGF0ZXIiLCJzb2NrZXREYXRhIiwiU29ja2V0SGFuZGxlciIsInJlcSIsInJlcyIsInNvY2tldCIsInNlcnZlciIsImlvIiwib24iLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImV2ZW50IiwiZXZlbnRUeXBlIiwibXNnIiwiZXZlbnRGbiIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/socket.ts\n");

/***/ }),

/***/ "(api)/./server_src/socket/events.ts":
/*!*************************************!*\
  !*** ./server_src/socket/events.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"connectPlayer\": () => (/* binding */ connectPlayer),\n/* harmony export */   \"emitData\": () => (/* binding */ emitData),\n/* harmony export */   \"events\": () => (/* binding */ events),\n/* harmony export */   \"getOnlinePlayers\": () => (/* binding */ getOnlinePlayers)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_utils_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/utils/const */ \"(api)/./src/utils/const.ts\");\n\n\nconst getOnlinePlayers = (players)=>{\n    return lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(players, (user)=>user.isOnline && user.isInRoom\n    );\n};\nconst getAnswerScore = (gameState, answerIndex)=>{\n    const qNumber = gameState.gameData.quizNumber;\n    const correctAnswer = quiz.questions[qNumber].answer;\n    const isCorrect = answerIndex === correctAnswer;\n    let score = 0;\n    if (isCorrect) {\n        score = 1;\n        const addrKeys = Object.keys(gameState.quizAnswers[qNumber]);\n        if (addrKeys && addrKeys.length > 0) {\n            addrKeys.forEach((addr)=>{\n                const answerItem = gameState.quizAnswers[qNumber][addr];\n                if (answerItem.answerIndex !== correctAnswer) {\n                    score = 2;\n                }\n            });\n        } else {\n            score = 2;\n        }\n    }\n    return score;\n};\nconst connectPlayer = (gameState, io, socket, updateData)=>{\n    const addr = socket.handshake.address;\n    const id = socket.id;\n    if (!gameState.players[addr]) {\n        gameState.players[addr] = {\n            name: \"\",\n            score: 0,\n            isOnline: true,\n            isInRoom: false,\n            id\n        };\n    } else {\n        gameState.players[addr].isOnline = true;\n        gameState.players[addr].id = id;\n    }\n    updateData(gameState);\n    emitData(gameState, io, socket);\n};\nconst quiz = __webpack_require__(/*! ./../quiz_001.json */ \"(api)/./server_src/quiz_001.json\");\nconst emitData = (gameState, io, socket)=>{\n    const addr = socket.handshake.address;\n    const qNumber = gameState.gameData.quizNumber;\n    let clientQuizAnswer = {\n        answerIndex: -1,\n        answerTime: new Date(),\n        answerScore: 0,\n        answerElapsed: 0\n    };\n    if (qNumber > -1 && gameState.quizAnswers[gameState.gameData.quizNumber][addr]) {\n        clientQuizAnswer = gameState.quizAnswers[gameState.gameData.quizNumber][addr];\n    }\n    io.emit(\"online-players\", getOnlinePlayers(gameState.players));\n    io.emit(\"game-data\", gameState.gameData);\n    io.emit(\"quiz-counter\", gameState.counter);\n    io.emit(\"quiz-data\", gameState.quizData);\n    io.emit(\"quiz-result\", gameState.quizResult);\n    socket.emit(\"answer-data\", {\n        answerIndex: clientQuizAnswer.answerIndex,\n        answerTime: clientQuizAnswer.answerTime.getTime(),\n        answerScore: clientQuizAnswer.answerScore,\n        answerElapsed: clientQuizAnswer.answerElapsed\n    });\n};\nconst events = {\n    \"live-data\": (io, socket, gameState, msg)=>{\n        socket.emit(\"game-data\", gameState.gameData);\n    },\n    \"end-game\": (io, socket, gameState, msg, updateData)=>{\n        gameState.gameData.started = false;\n        gameState.gameData.quizStarted = false;\n        gameState.gameData.quizNumber = -1;\n        gameState.gameData.startedTime = new Date().getTime();\n        gameState.gameData.pin = \"\";\n        Object.keys(gameState.players).forEach((pKey)=>{\n            const currPlayer = gameState.players[pKey];\n            gameState.players[pKey] = {\n                ...currPlayer,\n                name: \"\",\n                score: 0,\n                isInRoom: false\n            };\n        });\n        gameState.players = lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(gameState.players, (p)=>{\n            return p.isOnline;\n        });\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.NOT_COUNTING;\n        gameState.quizAnswers = {};\n        updateData(gameState);\n        emitData(gameState, io, socket);\n    },\n    \"start-game\": (io, socket, gameState, msg, updateData)=>{\n        gameState.gameData.started = true;\n        gameState.gameData.quizStarted = false;\n        gameState.gameData.startedTime = new Date().getTime();\n        gameState.gameData.pin = lodash__WEBPACK_IMPORTED_MODULE_0___default().range(0, 6).map(()=>lodash__WEBPACK_IMPORTED_MODULE_0___default().random(0, 9)\n        ).join(\"\");\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.NOT_COUNTING;\n        updateData(gameState);\n        emitData(gameState, io, socket);\n    },\n    \"start-quiz\": (io, socket, gameState, msg, updateData)=>{\n        gameState.counter = 3;\n        gameState.gameData.quizNumber = gameState.gameData.quizNumber + 1;\n        gameState.gameData.quizStarted = true;\n        gameState.quizAnswers[gameState.gameData.quizNumber] = {};\n        emitData(gameState, io, socket);\n        io.emit(\"quiz-counter\", _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.GAME_STARTING);\n        const counterInterval = setInterval(()=>{\n            io.emit(\"quiz-counter\", gameState.counter);\n            if (gameState.counter === 0) {\n                const quizItem = quiz.questions[gameState.gameData.quizNumber];\n                gameState.quizData = {\n                    q: quizItem.video,\n                    answers: lodash__WEBPACK_IMPORTED_MODULE_0___default().range(0, quizItem.isTrueFalse ? 2 : 4).map((i)=>`q${i}`\n                    )\n                };\n                io.emit(\"quiz-data\", gameState.quizData);\n                clearInterval(counterInterval);\n                gameState.gameData.startedTime = new Date().getTime();\n                updateData(gameState);\n            } else {\n                gameState.counter--;\n                updateData(gameState);\n            }\n        }, 1000);\n    },\n    \"join-game\": (io, socket, gameState, msg, updateData)=>{\n        const addr = socket.handshake.address;\n        if (msg.pin === gameState.gameData.pin && gameState.gameData.started) {\n            gameState.players[addr].id = socket.id;\n            gameState.players[addr].isOnline = true;\n            gameState.players[addr].name = msg.name;\n            gameState.players[addr].isInRoom = true;\n            updateData(gameState);\n            emitData(gameState, io, socket);\n        }\n    },\n    disconnect: (io, socket, gameState, msg, updateData)=>{\n        const addr = socket.handshake.address;\n        gameState.players[addr].isOnline = false;\n        updateData(gameState);\n        emitData(gameState, io, socket);\n    },\n    \"answer-question\": (io, socket, gameState, answerIndex, updateData)=>{\n        const addr = socket.handshake.address;\n        const answerScore = getAnswerScore(gameState, answerIndex);\n        const answerResult = {\n            answerIndex,\n            answerTime: new Date(),\n            answerScore,\n            answerElapsed: new Date().getTime() - gameState.gameData.startedTime\n        };\n        if (!gameState.quizAnswers[gameState.gameData.quizNumber]) {\n            gameState.quizAnswers[gameState.gameData.quizNumber] = {};\n        }\n        gameState.quizAnswers[gameState.gameData.quizNumber][addr] = answerResult;\n        updateData(gameState);\n        emitData(gameState, io, socket);\n    },\n    \"end-quiz\": (io, socket, gameState, msg, updateData)=>{\n        gameState.counter = _src_utils_const__WEBPACK_IMPORTED_MODULE_1__.SHOW_RESULTS;\n        const quizNumber = gameState.gameData.quizNumber;\n        const quizQuestion = quiz.questions[quizNumber];\n        const resultsByAnswer = lodash__WEBPACK_IMPORTED_MODULE_0___default().range(0, quizQuestion.isTrueFalse ? 2 : 4).map((i)=>{\n            return {\n                answerCode: String.fromCharCode(65 + i),\n                people: Object.keys(lodash__WEBPACK_IMPORTED_MODULE_0___default().pickBy(gameState.quizAnswers[quizNumber], (addr)=>{\n                    return addr.answerIndex === i;\n                })).length\n            };\n        });\n        gameState.quizResult = {\n            title: quiz.title,\n            correctAnswer: quizQuestion.answer,\n            answers: resultsByAnswer\n        };\n        updateData(gameState);\n        emitData(gameState, io, socket);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./server_src/socket/events.ts\n");

/***/ }),

/***/ "(api)/./src/utils/const.ts":
/*!****************************!*\
  !*** ./src/utils/const.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GAME_STARTING\": () => (/* binding */ GAME_STARTING),\n/* harmony export */   \"NOT_COUNTING\": () => (/* binding */ NOT_COUNTING),\n/* harmony export */   \"SHOW_RESULTS\": () => (/* binding */ SHOW_RESULTS)\n/* harmony export */ });\nconst SHOW_RESULTS = -3;\nconst GAME_STARTING = -2;\nconst NOT_COUNTING = -1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvY29uc3QudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsWUFBWSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3hCLE1BQU1DLGFBQWEsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN6QixNQUFNQyxZQUFZLEdBQUcsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZWF0LXRoZS1tdXNpYy8uL3NyYy91dGlscy9jb25zdC50cz83YzAwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTSE9XX1JFU1VMVFMgPSAtMztcbmV4cG9ydCBjb25zdCBHQU1FX1NUQVJUSU5HID0gLTI7XG5leHBvcnQgY29uc3QgTk9UX0NPVU5USU5HID0gLTE7XG4iXSwibmFtZXMiOlsiU0hPV19SRVNVTFRTIiwiR0FNRV9TVEFSVElORyIsIk5PVF9DT1VOVElORyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/const.ts\n");

/***/ }),

/***/ "(api)/./server_src/quiz_001.json":
/*!**********************************!*\
  !*** ./server_src/quiz_001.json ***!
  \**********************************/
/***/ ((module) => {

module.exports = JSON.parse('{"title":"Maluma Quiz","questions":[{"isTrueFalse":false,"answer":0,"video":"video/test_001.mp4"},{"isTrueFalse":false,"answer":0,"video":"video/test_002.mp4"},{"isTrueFalse":false,"answer":0,"video":"video/test_003.mp4"},{"isTrueFalse":false,"answer":0,"video":"video/test_004.mp4"},{"isTrueFalse":true,"answer":1,"video":"video/test_005.mp4"}]}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/socket.ts"));
module.exports = __webpack_exports__;

})();